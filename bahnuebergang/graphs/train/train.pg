graph Train {

    vars {
        int position [-2000..500]
        int velocity [0..44]
    }

    states {Drive}

    init: Drive {velocity = 30 & position = -2000}

    transitions {
        Drive -> Drive {
            action {
                position := position + velocity
            }
        }

        Drive -> Drive {
            guard { Brake = BrakeActive  & velocity > a }
            action { velocity := velocity - a }
        }

        # Wenn die Bremsleistung größer als die verbleibende Geschwindigkeit ist, soll der Zug zum stehen kommen
        # -> keine negative Geschwidingkeit
        Drive -> Drive {
            guard { Brake = BrakeActive & velocity <= a }
            action { velocity := 0 }
        }
    }

}