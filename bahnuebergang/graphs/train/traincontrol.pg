graph TrainControl {

    vars {
        int c [3..3]
        int a [5..5]
        int z [3..3]
        int ep [-2000..0]
        int ap [-2000..0]
        int bep [-2000..0]
        int gp [0..0]
    }

    states {BeforeEP, EP, AP, BEP, NBEP, GP, SP}

    init: BeforeEP {
        c = 3 & 
        a = 5 &
        z = 3 &
        bep = (0 - z - ((velocity_m * velocity_m) / (2 * a)) ) &
        ap = (bep - (2 * c * velocity_m)) &
        ep = (ap - (velocity_m) * (t + c))
        }

    transitions {

        BeforeEP -> EP {
            guard { position_m > ep }
        }

        EP -> AP {
            guard { position_m > ap & position_m < bep}
        }

        AP -> BEP {
            guard { position_m > bep & position_m < gp }
        }

        BEP -> NBEP {
            guard { TrainRadioModule != Receiving }
        }

        BEP -> GP {
            guard { position_m = 0 }
        }

        GP -> SP {
            guard { TrainSensor = TrainPassed }
        }

    }
}
